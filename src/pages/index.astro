---
import Layout from '../layouts/Layout.astro';
import { App } from '../components/App.jsx';

import { getCollection, getEntry, getEntries } from 'astro:content';

const quotes = await Promise.all((await getCollection('quotations')).map(async quote => ({
	...quote,
	data: {
		...quote.data,
		sourceEntry: await getEntry(quote.data.source_guid),
		codeEntries: await Promise.all(
			quote.data.Coding.map(code => getEntry(code.CodeRef.attrs.targetGUID))
		),
	},
})));

const codes = await getCollection('codes');

const codesWithQuotes = codes.map(code => ({
	...code,
	quotes: quotes.filter(quote => quote.data.codeEntries.some(coding => coding.data.guid === code.data.guid)),
}));
console.log(codesWithQuotes)


const sources = await getCollection('sources');


---

<Layout title="scSTAR">
	<App
		client:load
		codes={codes}
		sources={sources}
		quotes={quotes}
	/>
</Layout>

<style is:global>
	main {
		
	}
	.cards-container {
		width: 95%;
	}
	.quote-cards {
		display: grid;
		grid-gap: 1rem;
		grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
		box-sizing: border-box;
	}
	.link-card {
		list-style-type: none;
		margin: 0;
		padding: 0;
		display: inline-block;
		width: 100%;
		height: 100%;
		border: 1px solid rgba(0, 0, 0, 0.1);
		box-sizing: border-box;
	}
	.img-container {
		width: 100%;
	}
	.quote-img {
		display: block;
		max-width: 100%;
		max-height: 500px;
		object-fit: contain;
	}
	.codes {
		width: auto;
	}
	.code-pill {
		display: inline;
		background-color: lightblue;
		border-radius: 15px;
		padding: 0px 8px;
		margin: 0px 4px;
	}
</style>
