---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

import { getCollection, getEntry, getEntries } from 'astro:content';

const quotes = await Promise.all((await getCollection('quotations')).map(async quote => ({
	...quote,
	data: {
		...quote.data,
		sourceEntry: await getEntry(quote.data.source_guid),
		codeEntries: await Promise.all(
			quote.data.Coding.map(code => getEntry(code.CodeRef.attrs.targetGUID))
		),
	},
})));

console.log(await quotes)

const numPapers = (await getCollection('sources')).length;
const numQuotes = (await getCollection('quotations')).length;
const numCodes = (await getCollection('codes')).length;

---

<Layout title="scSTAR">
	<main>

		<h1>scSTAR</h1>
		<p>Number of papers: {numPapers}</p>
		<p>Number of quotations: {numQuotes}</p>
		<p>Number of codes: {numCodes}</p>

		<div>
			<p>Filter by code:</p>
			TODO (allow filtering quotations by multiple codes with AND or OR)

			<p>Filter by paper:</p>
			<p>Filter by number of cells:</p>
			<p>Filter by paper containing quote with code:</p>
			<p>Filter by code group: </p>
		</div>

		
		<div role="list" class="quote-cards">
			{quotes.map(quote => (
				<Card
					key={quote.id}
					data={quote.data}
				/>
			))}
		</div>
	</main>
</Layout>

<style>
	main {
		
	}
	.quote-cards {
		display: grid;
		grid-gap: 1rem;
		grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));

	}
</style>
